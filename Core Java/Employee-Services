
/*Employee(id, name, location, salary,managerName)  

EmployeeService -> 

CRUD  ( Add, Get all, Delete by ID )

1. Get employees whose salary is greater than given value ( 50,000)
2. Employess whos salary between given range ( 40K - 70K)
3.  based on given location
4. Update salary of all employees by 10% whose location is Pune.*/




package com.nobel.model;

public class Employees {
	private int id;
	private String name;
	private String location;
	private int salary;
	private String managerName;

	public Employees(int id, String name, String location, int salary,String managerName) {
		super();
		this.id = id;
		this.name = name;
		this.location = location;
		this.salary = salary;
		this.managerName=managerName;
	}
	public int getSalary() {
		return salary;
	}
	public String giveLocation() {
		return location;
	}
	public void increaseSalaryByPercent() {
		salary=(salary/100*10)+salary;
	}
	

	@Override
	public String toString() {
		return "Employees [id=" + id + ", name=" + name + ", location=" + location + ", salary=" + salary
				+ ", managerName=" + managerName + "]";
	}

	
}



package com.nobel.service;

import com.nobel.model.Employees;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class EmployeeServices {

	private List<Employees> list = new ArrayList<>();

	public void addEmployee(Employees employee) {
		list.add(employee);

	}

	public List<Employees> greaterSalary(int salary) {
		List<Employees> getGreaterSalary = new ArrayList<>();

		for (Employees employee : list) {
			if (employee.getSalary() > salary) {
				getGreaterSalary.add(employee);
			}

		}
		return getGreaterSalary;
	}

	public List<Employees> getAllEmployee() {

		return list;
	}

	public List<Employees> BetweenSalary(int lessSalary, int maxSalary) {
		List<Employees> betweensalary = new ArrayList<>();

		for (Employees employee : list) {
			int salary = employee.getSalary();
			if (salary > lessSalary && salary < maxSalary) {
				betweensalary.add(employee);
			}
		}
		return betweensalary;
	}

	public List<Employees> givenLocation(String location) {
		List<Employees> givenLoc = new ArrayList<>();
		for (Employees employee : list) {
			if (employee.giveLocation() == location) {
				givenLoc.add(employee);

			}
		}
		for (Employees employee : list) {
			if (employee.giveLocation() != location) {
				givenLoc.add(employee);
			}
		}
		return givenLoc;
	}

	public List<Employees> increaseSalary(String location) {
		List<Employees> lists = new ArrayList<>();
		for (Employees employee : list) {
			if (employee.giveLocation().equalsIgnoreCase(location)) {
				employee.increaseSalaryByPercent();
				lists.add(employee);
			} 
			else 
			{
					lists.add(employee);
			}

		}
		return list;

	}

}

]

package com.nobel.app;

import com.nobel.service.EmployeeServices;
import java.util.ArrayList;
import java.util.List;
import com.nobel.model.Employees;

public class MainEmployee {

	public static void main(String[] args) {

		EmployeeServices service = new EmployeeServices();

		service.addEmployee(new Employees(1, "Sunil", "Pune", 50000, "Satis"));
		service.addEmployee(new Employees(2, "Ajay", "Mumbai", 90000, "Anand"));
		service.addEmployee(new Employees(3, "Anand", "pune", 60000, "Pratik"));
		service.addEmployee(new Employees(4, "Pratik", "pune", 30000, "Raju"));
		
		System.out.println("\n*************Print all Employee Information*****************");
		List<Employees> list = service.getAllEmployee();
		for (Employees employee : list) {
			System.out.println(employee);
		}

		
		System.out.println("\n**************Salary is greater than 50000****************\n");
		list = service.greaterSalary(50000);
		for (Employees employee : list) {
			System.out.println(employee);
		}

		
		System.out.println("\n************Salary between 40,000 to 70,000 *******************\n");
		list = service.BetweenSalary(40000, 70000);
		for (Employees employee : list) {
			System.out.println(employee);
		}
		
	
		System.out.println("\n**************Emloyees by given location*******************\n");
		list=service.givenLocation("pune");
		for(Employees employee : list) {
			System.out.println(employee);
		}
		
		
		
		System.out.println("\n**************Updated salary by 10% whose location is Pune**************\n");
		list=service.increaseSalary("pune");
		for(Employees employee: list) {
			System.out.println(employee);
		}
		
		
	}
}

**************************************/ OUT PUT /************************************************************************


*************Print all Employee Information*****************
Employees [id=1, name=Sunil, location=Pune, salary=50000, managerName=Satis]
Employees [id=2, name=Ajay, location=Mumbai, salary=90000, managerName=Anand]
Employees [id=3, name=Anand, location=pune, salary=60000, managerName=Pratik]
Employees [id=4, name=Pratik, location=pune, salary=30000, managerName=Raju]

**************Salary is greater than 50000****************

Employees [id=2, name=Ajay, location=Mumbai, salary=90000, managerName=Anand]
Employees [id=3, name=Anand, location=pune, salary=60000, managerName=Pratik]

************Salary between 40,000 to 70,000 *******************

Employees [id=1, name=Sunil, location=Pune, salary=50000, managerName=Satis]
Employees [id=3, name=Anand, location=pune, salary=60000, managerName=Pratik]

**************Emloyees by given location*******************

Employees [id=3, name=Anand, location=pune, salary=60000, managerName=Pratik]
Employees [id=4, name=Pratik, location=pune, salary=30000, managerName=Raju]
Employees [id=1, name=Sunil, location=Pune, salary=50000, managerName=Satis]
Employees [id=2, name=Ajay, location=Mumbai, salary=90000, managerName=Anand]

**************Updated salary by 10% whose location is Pune**************


Employees [id=1, name=Sunil, location=Pune, salary=55000, managerName=Satis]
Employees [id=3, name=Anand, location=pune, salary=66000, managerName=Pratik]
Employees [id=4, name=Pratik, location=pune, salary=33000, managerName=Raju]




****************************************************************************************************************
