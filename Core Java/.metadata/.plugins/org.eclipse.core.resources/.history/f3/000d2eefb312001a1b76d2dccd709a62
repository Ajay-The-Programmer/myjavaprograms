//1. Get employees whose salary is greater than given value ( 50,000)
//2. Employess whose salary between given range ( 40K - 70K)
//3. Employee based on given location
//4. Update salary of all employees by 10% whose location is Pune.

package com.nobel.service;

import com.nobel.model.Employees;
import java.util.ArrayList;
import java.util.List;

public class EmployeeServices {
	// In memory DataBase
	private List<Employees> list = new ArrayList<>();

	public void addEmployee(Employees employee) {
		list.add(employee);

	}

	public List<Employees> greaterSalary(int salary) {
		List<Employees> getGreaterSalary = new ArrayList<>();
		
		for (Employees employee : list) {
			if (employee.getSalary() > salary) {
				getGreaterSalary.add(employee);
			}

		}
		return getGreaterSalary;
	}

	public List<Employees> getAllEmployee() {

		return list;
	}

	public List<Employees> BetweenSalary(int lessSalary, int maxSalary) {
		List<Employees> betweensalary = new ArrayList<>();
		
		for (Employees employee : list) {
			int salary = employee.getSalary();
			if (salary > lessSalary && salary < maxSalary) {
				betweensalary.add(employee);
			}
		}
		return betweensalary;
	}

	public List<Employees> givenLocation(String location){
		List<Employees> givenLoc=new ArrayList<>();
		for(Employees employee:list);{
			if(employee.giveLocation().equalsIgnoreCase(location)) {
				givenLoc.add(employee);
				
				
				
			}
		}
	}
}
